{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","lastPage","setSelectedPage","selectedPage","pages","map","className","cn","href","onClick","page","isSelected","items","App","useState","query","setQuery","Math","ceil","length","totalItems","sliceTo","sliceFrom","itemsList","slice","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCEIG,EAAa,SAAC,GAIb,IAHZC,EAGW,EAHXA,SACAC,EAEW,EAFXA,gBACAC,EACW,EADXA,aAEMC,EAAQV,EAAW,EAAGO,GACzBI,KAAI,SAAAP,GAAC,gBAAOA,MAUf,OACE,qBAAIQ,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAG,YACK,IAAjBJ,EAAqB,WAAa,IAFtC,SAIE,mBACE,UAAQ,WACRG,UAAU,YACVE,KAAK,QACL,gBAAgC,IAAjBL,EAAqB,OAAS,QAC7CM,QAnBe,kBACrBN,EAAe,GAAKD,EAAgBC,EAAe,IAa/C,oBAUDC,EAAMC,KAAI,SAACK,GACV,IAAMC,EAAaR,KAAkBO,EAErC,OACE,oBACEJ,UAAWC,IAAG,YACZI,EAAa,SAAW,IAF5B,SAIE,mBACE,UAAQ,WACRL,UAAU,YACVE,KAAI,WAAME,GACVD,QAAS,WACPP,EAAiBS,EAAqBR,GAAPO,IALnC,SAQGA,SAKT,oBACEJ,UAAWC,IAAG,YACZJ,IAAiBF,EAAW,WAAa,IAF7C,SAIE,mBACE,UAAQ,WACRK,UAAU,YACVE,KAAK,QACL,gBAAeL,IAAiBF,EAAW,OAAS,QACpDQ,QAlDW,kBACjBN,EAAeF,GAAYC,EAAgBC,EAAe,IA4CtD,wBC5DFS,EAAQlB,EAAW,EAAG,IACzBW,KAAI,SAAAP,GAAC,qBAAYA,MAEPe,EAAgB,WAC3B,MAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwCF,mBAAS,GAAjD,mBAAOX,EAAP,KAAqBD,EAArB,KACMD,EAAWgB,KAAKC,KAAKN,EAAMO,OAASJ,GAEpCK,EAAaR,EAAMO,OACnBE,EAAUlB,EAAeY,EACzBO,EAAYD,EAAUN,EACtBQ,EAAYX,EAAMY,MAAMF,EAAWD,GAOzC,OACE,sBAAKf,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWH,EADX,mBACkCmB,EAAY,EAD9C,cACqDD,EAAUD,EAAaA,EAAaC,EADzF,eACuGD,EADvG,OAIA,sBAAKd,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRmB,GAAG,kBACHnB,UAAU,eACVoB,MAAOX,EACPY,SApBW,SAACC,GACpBZ,GAAUY,EAAMC,OAAOH,OACvBxB,EAAgB,IAaV,UAOE,wBAAQwB,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBxB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEL,SAAUA,EACVC,gBAAiBA,EACjBC,aAAcA,IAGhB,6BACGoB,EAAUlB,KAAI,SAAA0B,GAAI,OACjB,oBAAI,UAAQ,OAAZ,SAAoBA,aC1D9BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.75a2489c.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  lastPage: number;\n  setSelectedPage: React.Dispatch<React.SetStateAction<number>>;\n  selectedPage: number;\n}\n\nexport const Pagination = ({\n  lastPage,\n  setSelectedPage,\n  selectedPage,\n}: Props) => {\n  const pages = getNumbers(1, lastPage)\n    .map(n => `${n}`);\n\n  const handlePrevious = () => (\n    selectedPage > 1 && setSelectedPage(selectedPage - 1)\n  );\n\n  const handleNext = () => (\n    selectedPage < lastPage && setSelectedPage(selectedPage + 1)\n  );\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn('page-item',\n          selectedPage === 1 ? 'disabled' : '')}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={selectedPage === 1 ? 'true' : 'false'}\n          onClick={handlePrevious}\n        >\n          «\n        </a>\n      </li>\n      {pages.map((page) => {\n        const isSelected = selectedPage === +page;\n\n        return (\n          <li\n            className={cn('page-item',\n              isSelected ? 'active' : '')}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => {\n                setSelectedPage(!isSelected ? +page : selectedPage);\n              }}\n            >\n              {page}\n            </a>\n          </li>\n        );\n      })}\n      <li\n        className={cn('page-item',\n          selectedPage === lastPage ? 'disabled' : '')}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={selectedPage === lastPage ? 'true' : 'false'}\n          onClick={handleNext}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [query, setQuery] = useState(5);\n  const [selectedPage, setSelectedPage] = useState(1);\n  const lastPage = Math.ceil(items.length / query);\n\n  const totalItems = items.length;\n  const sliceTo = selectedPage * query;\n  const sliceFrom = sliceTo - query;\n  const itemsList = items.slice(sliceFrom, sliceTo);\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setQuery(+event.target.value);\n    setSelectedPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${selectedPage} (items ${sliceFrom + 1} - ${sliceTo > totalItems ? totalItems : sliceTo} of ${totalItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={query}\n            onChange={handleChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        lastPage={lastPage}\n        setSelectedPage={setSelectedPage}\n        selectedPage={selectedPage}\n      />\n\n      <ul>\n        {itemsList.map(item => (\n          <li data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}