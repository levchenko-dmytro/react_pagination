{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","onPageChange","currentPage","perPage","lastPage","Math","ceil","pages","map","className","cn","href","onClick","page","isSelected","items","App","useState","setPerPage","selectedPage","setSelectedPage","length","sliceTo","sliceFrom","itemsList","slice","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCGIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,YACAC,EACI,EADJA,QAEMC,EAAWC,KAAKC,KAAKN,EAAQG,GAC7BI,EAAQd,EAAW,EAAGW,GACzBI,KAAI,SAAAX,GAAC,gBAAOA,MAUf,OACE,qBAAIY,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAG,YACI,IAAhBR,EAAoB,WAAa,IAFrC,SAIE,mBACE,UAAQ,WACRO,UAAU,YACVE,KAAK,QACL,gBAA+B,IAAhBT,EAAoB,OAAS,QAC5CU,QAnBe,kBACrBV,EAAc,GAAKD,EAAaC,EAAc,IAa1C,oBAUDK,EAAMC,KAAI,SAACK,GACV,IAAMC,EAAaZ,KAAiBW,EAEpC,OACE,oBACEJ,UAAWC,IAAG,YACZI,EAAa,SAAW,IAF5B,SAKE,mBACE,UAAQ,WACRL,UAAU,YACVE,KAAI,WAAME,GACVD,QAAS,WACPX,EAAca,EAAqBZ,GAAPW,IALhC,SAQGA,KAVEA,MAeX,oBACEJ,UAAWC,IAAG,YACZR,IAAgBE,EAAW,WAAa,IAF5C,SAIE,mBACE,UAAQ,WACRK,UAAU,YACVE,KAAK,QACL,gBAAeT,IAAgBE,EAAW,OAAS,QACnDQ,QAnDW,kBACjBV,EAAcE,GAAYH,EAAaC,EAAc,IA6CjD,wBChEFa,EAAQtB,EAAW,EAAG,IACzBe,KAAI,SAAAX,GAAC,qBAAYA,MAEPmB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOd,EAAP,KAAgBe,EAAhB,KACA,EAAwCD,mBAAS,GAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KACMpB,EAAQe,EAAMM,OAEdC,EAAUH,EAAehB,EACzBoB,EAAYD,EAAUnB,EACtBqB,EAAYT,EAAMU,MAAMF,EAAWD,GAOzC,OACE,sBAAKb,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWU,EADX,mBACkCI,EAAY,EAD9C,cACqDD,EAAUtB,EAAQA,EAAQsB,EAD/E,eAC6FtB,EAD7F,OAIA,sBAAKS,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRiB,GAAG,kBACHjB,UAAU,eACVkB,MAAOxB,EACPyB,SApBW,SAACC,GACpBX,GAAYW,EAAMC,OAAOH,OACzBP,EAAgB,IAaV,UAOE,wBAAQO,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBtB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACET,MAAOA,EACPG,QAASA,EACTF,aAAcmB,EACdlB,YAAaiB,IAGf,6BACGK,EAAUhB,KAAI,SAAAwB,GAAI,OACjB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC1DlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c0344837.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number;\n  onPageChange: React.Dispatch<React.SetStateAction<number>>;\n  currentPage: number;\n  perPage: number;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  onPageChange,\n  currentPage,\n  perPage,\n}) => {\n  const lastPage = Math.ceil(total / perPage);\n  const pages = getNumbers(1, lastPage)\n    .map(n => `${n}`);\n\n  const handlePrevious = () => (\n    currentPage > 1 && onPageChange(currentPage - 1)\n  );\n\n  const handleNext = () => (\n    currentPage < lastPage && onPageChange(currentPage + 1)\n  );\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn('page-item',\n          currentPage === 1 ? 'disabled' : '')}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1 ? 'true' : 'false'}\n          onClick={handlePrevious}\n        >\n          «\n        </a>\n      </li>\n      {pages.map((page) => {\n        const isSelected = currentPage === +page;\n\n        return (\n          <li\n            className={cn('page-item',\n              isSelected ? 'active' : '')}\n            key={page}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => {\n                onPageChange(!isSelected ? +page : currentPage);\n              }}\n            >\n              {page}\n            </a>\n          </li>\n        );\n      })}\n      <li\n        className={cn('page-item',\n          currentPage === lastPage ? 'disabled' : '')}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === lastPage ? 'true' : 'false'}\n          onClick={handleNext}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [selectedPage, setSelectedPage] = useState(1);\n  const total = items.length;\n\n  const sliceTo = selectedPage * perPage;\n  const sliceFrom = sliceTo - perPage;\n  const itemsList = items.slice(sliceFrom, sliceTo);\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setSelectedPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${selectedPage} (items ${sliceFrom + 1} - ${sliceTo > total ? total : sliceTo} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        onPageChange={setSelectedPage}\n        currentPage={selectedPage}\n      />\n\n      <ul>\n        {itemsList.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}